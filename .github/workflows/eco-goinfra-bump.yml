name: "Eco-GoInfra Module Bump"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
permissions:
  contents: read
jobs:
  main:
    name: Eco-goinfra module bump
    if: github.repository_owner == 'openshift-kni'

    permissions:
      contents: write # for peter-evans/create-pull-request to create branch
      pull-requests: write # for peter-evans/create-pull-request to create a PR

    outputs:
      pr-url: ${{ steps.create-pr.outputs.pull-request-url }}

    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run sync script
        run: make sync-eco-goinfra

      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_KEY }}
        with:
          commit-message: "deps: bump github.com/openshift-kni/eco-goinfra"
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          title: Bump eco-goinfra dependency
          body: |
            eco-goinfra bump generated by [this CI run](${{ github.server_url }}/${{ github.repository }}/actions/run/${{ github.run_id }}).
          branch: eco-goinfra-bump
          delete-branch: true
          reviewers: achuzhoy,cdvultur,klaskosk,kononovn,trewest

  makefile:
    needs: main
    uses: ./.github/workflows/makefile.yml
    with:
      branch: eco-goinfra-bump

  integration:
    needs: main
    uses: ./.github/workflows/eco-goinfra-integration.yml
    with:
      branch: eco-goinfra-bump

  label:
    needs: [main, makefile, integration]
    if: ${{ !cancelled() && needs.main.result == 'success' && needs.main.outputs.pr-url }}

    name: Label created PR

    permissions:
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Label PR based on CI result
        run: gh pr edit ${{ needs.main.outputs.pr-url }} --add-label ci/$CI_RESULT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_RESULT: ${{ needs.makefile.result == 'success' && needs.integration.result == 'success' && 'success' || 'failure' }}
